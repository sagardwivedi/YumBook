// This file is auto-generated by @hey-api/openapi-ts

import { z } from "zod";

export const zBodyLoginLoginAccessToken = z.object({
  grant_type: z.union([z.string().regex(/password/), z.null()]).optional(),
  username: z.string(),
  password: z.string(),
  scope: z.string().optional().default(""),
  client_id: z.union([z.string(), z.null()]).optional(),
  client_secret: z.union([z.string(), z.null()]).optional(),
});

export const zErrorResponse = z.object({
  detail: z.string(),
});

export const zHttpValidationError = z.object({
  detail: z
    .array(
      z.object({
        loc: z.array(z.unknown()),
        msg: z.string(),
        type: z.string(),
      }),
    )
    .optional(),
});

export const zToken = z.object({
  access_token: z.string(),
  token_type: z.string().optional().default("bearer"),
});

export const zUserPublic = z.object({
  id: z.string().uuid(),
  full_name: z.union([z.string(), z.null()]),
  profile_image_url: z.union([z.string(), z.null()]),
});

export const zUserRegister = z.object({
  email: z.string().email(),
  username: z.string().min(3).max(10),
  full_name: z.union([z.string().max(255), z.null()]).optional(),
  password: z.string().min(8).max(40),
});

export const zValidationError = z.object({
  loc: z.array(z.unknown()),
  msg: z.string(),
  type: z.string(),
});

export const zLoginAccessTokenResponse = zToken;

export const zCreateUserResponse = zUserPublic;
