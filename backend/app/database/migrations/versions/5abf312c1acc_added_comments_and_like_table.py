"""Added comments and like table

Revision ID: 5abf312c1acc
Revises: 3305221c53f7
Create Date: 2024-11-15 00:02:31.591948

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5abf312c1acc"
down_revision: str | None = "3305221c53f7"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comment",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "content", sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("recipe_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recipe_id"],
            ["recipe.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "like",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("recipe_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recipe_id"],
            ["recipe.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # Add `total_liked` column with default value of 0
    op.add_column(
        "recipe",
        sa.Column("total_liked", sa.Integer(), server_default="0", nullable=False),
    )

    # Drop "updated_at" column
    op.drop_column("recipe", "updated_at")

    # Alter columns in the "user" table
    op.alter_column("user", "avatar_path", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "user", "full_name", existing_type=sa.VARCHAR(length=255), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user", "full_name", existing_type=sa.VARCHAR(length=255), nullable=True
    )
    op.alter_column("user", "avatar_path", existing_type=sa.VARCHAR(), nullable=True)
    op.add_column(
        "recipe",
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("recipe", "total_liked")
    op.drop_table("like")
    op.drop_table("comment")
    # ### end Alembic commands ###
